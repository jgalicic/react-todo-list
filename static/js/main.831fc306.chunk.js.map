{"version":3,"sources":["_Components/NewTodo.js","_Components/TodoItem.js","_Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["NewTodo","props","handleSubmit","bind","handleChange","state","id","key","name","completed","evt","preventDefault","this","addTodoItem","setState","target","value","onSubmit","className","type","placeholder","onChange","icon","faPlus","Component","TodoItem","handleClick","enterEditMode","editMe","exitEditMode","deleteMe","editMode","toggleCompleted","prevState","editItem","deleteItem","itemClassNames","editModeOff","onClick","editModeOn","faCheck","faEdit","faTrash","TodoList","idCounter","todoItems","uuid","tempTodoItem","myArr","push","todoItemId","tempTodoItems","filter","t","parseInt","updatedText","tEdit","console","log","map","todo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.831fc306.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\"\n\nexport default class NewTodo extends Component {\n  constructor(props) {\n    super(props)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n\n    this.state = {\n      id: \"\",\n      key: \"\",\n      name: \"\",\n      completed: false,\n    }\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault()\n\n    this.props.addTodoItem(this.state)\n\n    this.setState({ name: \"\" })\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    })\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"newTodoForm\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter new todo\"\n            onChange={this.handleChange}\n            value={this.state.name}\n          ></input>\n          <button>\n            <FontAwesomeIcon className=\"faIcon\" icon={faPlus} />\n          </button>\n        </div>\n      </form>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\"\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\"\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\"\n\nexport default class TodoItem extends Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n    this.enterEditMode = this.enterEditMode.bind(this)\n    this.editMe = this.editMe.bind(this)\n    this.exitEditMode = this.exitEditMode.bind(this)\n    this.deleteMe = this.deleteMe.bind(this)\n\n    this.state = {\n      editMode: false,\n    }\n  }\n\n  handleClick(evt) {\n    this.props.toggleCompleted(evt.target.id)\n  }\n\n  enterEditMode() {\n    this.setState(\n      (prevState) => {\n        return { editMode: !prevState.editMode }\n      },\n      () => {\n        // console.log(\"!\", this.state)\n      }\n    )\n  }\n\n  editMe(evt) {\n    this.props.editItem(this.props.id, evt.target.value)\n  }\n\n  exitEditMode(evt) {\n    evt.preventDefault()\n    this.setState({ editMode: false })\n  }\n\n  deleteMe() {\n    this.props.deleteItem(this.props.id)\n  }\n\n  render() {\n    let itemClassNames = \"item\"\n    if (this.props.completed) itemClassNames += \" completed\"\n\n    let editModeOff = (\n      <p\n        onClick={this.handleClick}\n        id={this.props.id}\n        className={itemClassNames}\n      >\n        {this.props.name}\n      </p>\n    )\n    let editModeOn = (\n      <form onSubmit={this.exitEditMode}>\n        <div className=\"newTodoForm editModeForm\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.props.name}\n            onChange={this.editMe}\n          ></input>\n        </div>\n      </form>\n    )\n    return (\n      <div className=\"TodoItem\">\n        {this.state.editMode ? editModeOn : editModeOff}\n        <div className=\"todoIcons\">\n          {this.state.editMode ? (\n            <FontAwesomeIcon\n              onClick={this.exitEditMode}\n              className=\"faIcon\"\n              icon={faCheck}\n            />\n          ) : (\n            <FontAwesomeIcon\n              onClick={this.enterEditMode}\n              className=\"faIcon\"\n              icon={faEdit}\n            />\n          )}\n\n          <FontAwesomeIcon\n            onClick={this.deleteMe}\n            className=\"faIcon\"\n            icon={faTrash}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport NewTodo from \"./NewTodo\"\nimport TodoItem from \"./TodoItem\"\nimport { uuid } from \"uuidv4\"\n\nexport default class TodoList extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      idCounter: 3,\n      todoItems: [\n        { id: 0, key: uuid(), name: \"Wash the dishes\", completed: false },\n        { id: 1, key: uuid(), name: \"Go to the gym\", completed: false },\n        { id: 2, key: uuid(), name: \"Clean the bathroom\", completed: false },\n        { id: 3, key: uuid(), name: \"Wash the car\", completed: false },\n      ],\n    }\n    this.addTodoItem = this.addTodoItem.bind(this)\n    this.toggleCompleted = this.toggleCompleted.bind(this)\n    this.editItem = this.editItem.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n  }\n\n  addTodoItem(tempTodoItem) {\n    let myArr = [...this.state.todoItems]\n\n    tempTodoItem.id = this.state.idCounter + 1\n    tempTodoItem.key = uuid()\n\n    myArr.push(tempTodoItem)\n\n    this.setState(\n      (prevState) => {\n        return { idCounter: prevState.idCounter + 1, todoItems: myArr }\n      },\n      () => {\n        // console.log(this.state)\n      }\n    )\n  }\n\n  toggleCompleted(todoItemId) {\n    let tempTodoItems = [...this.state.todoItems]\n\n    let tempTodoItem = tempTodoItems.filter(\n      (t) => t.id === parseInt(todoItemId)\n    )\n\n    tempTodoItem = tempTodoItem[0]\n\n    tempTodoItem.completed = !tempTodoItem.completed\n\n    this.setState({ todoItems: tempTodoItems })\n  }\n\n  editItem(todoItemId, updatedText) {\n    let tempTodoItems = [...this.state.todoItems]\n\n    let tempTodoItem = tempTodoItems.filter(\n      (tEdit) => tEdit.id === parseInt(todoItemId)\n    )\n\n    console.log(tempTodoItem)\n\n    tempTodoItem = tempTodoItem[0]\n\n    tempTodoItem.name = updatedText\n\n    this.setState({ todoItems: tempTodoItems }, () => {\n      console.log(this.state)\n    })\n  }\n\n  deleteItem(todoItemId) {\n    this.setState(\n      {\n        todoItems: this.state.todoItems.filter((t) => t.id !== todoItemId),\n      },\n      () => {\n        console.log(this.state)\n      }\n    )\n  }\n\n  render() {\n    // Map over all of the elements in an array\n    const todoItems = this.state.todoItems.map((todo) => (\n      <TodoItem\n        {...this.state}\n        id={todo.id}\n        key={todo.key}\n        name={todo.name}\n        completed={todo.completed}\n        toggleCompleted={this.toggleCompleted}\n        deleteItem={this.deleteItem}\n        editItem={this.editItem}\n      />\n    ))\n\n    return (\n      <div className=\"TodoList\">\n        <h1>Things You Should Do</h1>\n        <p>Like right now</p>\n        <hr></hr>\n        {todoItems}\n\n        <NewTodo {...this.state} addTodoItem={this.addTodoItem} />\n      </div>\n    )\n  }\n}\n","import \"./App.css\"\nimport TodoList from \"./_Components/TodoList\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}